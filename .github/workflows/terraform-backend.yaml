name: "Terraform and PostgreSQL Deployment"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: "Manage AWS Resources"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME}}
      AWS_BUCKET_KEY: ${{ secrets.AWS_BUCKET_KEY}}
      TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
      TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
      TF_VAR_db_name: ${{ secrets.TF_VAR_DB_NAME }}
    defaults:
      run:
        working-directory: backend/terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME}}" -backend-config="key=${{ secrets.AWS_BUCKET_KEY}}" -backend-config="region=af-south-1"

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve

  flyway:
    needs: terraform
    name: Flyway migrations
    runs-on: ubuntu-latest
    env:
      AWS_RDS_ENDPOINT: ${{secrets.AWS_RDS_ENDPOINT}}
      TF_VAR_db_password: ${{ secrets.TF_VAR_DB_PASSWORD }}
      TF_VAR_db_username: ${{ secrets.TF_VAR_DB_USERNAME }}
      TF_VAR_db_name: ${{ secrets.TF_VAR_DB_NAME }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run Flyway Migrations
        run: |
          docker run --rm --volume ${{ github.workspace }}/flyway/migrations/versioned:/flyway/sql:ro redgate/flyway -url="jdbc:postgresql://${{secrets.AWS_RDS_ENDPOINT}}:5432/${{ secrets.TF_VAR_DB_NAME }}" -user="${{ secrets.TF_VAR_DB_USERNAME }}" -password="${{ secrets.TF_VAR_DB_PASSWORD }}" migrate

